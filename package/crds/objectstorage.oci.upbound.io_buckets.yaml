---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: buckets.objectstorage.oci.upbound.io
spec:
  group: objectstorage.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Bucket is the Schema for the Buckets API. Provides the Bucket
          resource in Oracle Cloud Infrastructure Object Storage service
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BucketSpec defines the desired state of Bucket
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessType:
                    description: (Updatable) The type of public access enabled on
                      this bucket. A bucket is set to NoPublicAccess by default, which
                      only allows an authenticated caller to access the bucket and
                      its contents. When ObjectRead is enabled on the bucket, public
                      access is allowed for the GetObject, HeadObject, and ListObjects
                      operations. When ObjectReadWithoutList is enabled on the bucket,
                      public access is allowed for the GetObject and HeadObject operations.
                    type: string
                  autoTiering:
                    description: (Updatable) Set the auto tiering status on the bucket.
                      By default, a bucket is created with auto tiering Disabled.
                      Use this option to enable auto tiering during bucket creation.
                      Objects in a bucket with auto tiering set to InfrequentAccess
                      are transitioned automatically between the 'Standard' and 'InfrequentAccess'
                      tiers based on the access pattern of the objects.
                    type: string
                  compartmentId:
                    description: (Updatable) The ID of the compartment in which to
                      create the bucket.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  kmsKeyId:
                    description: (Updatable) The OCID of a master encryption key used
                      to call the Key Management service to generate a data encryption
                      key or to encrypt or decrypt a data encryption key.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: (Updatable) Arbitrary string, up to 4KB, of keys
                      and values for user-defined metadata.
                    type: object
                    x-kubernetes-map-type: granular
                  namespace:
                    description: The Object Storage namespace used for the request.
                    type: string
                  objectEventsEnabled:
                    description: (Updatable) Whether or not events are emitted for
                      object state changes in this bucket. By default, objectEventsEnabled
                      is set to false. Set objectEventsEnabled to true to emit events
                      for object state changes. For more information about events,
                      see Overview of Events.
                    type: boolean
                  retentionRules:
                    description: (Updatable) Creates a new retention rule in the specified
                      bucket. The new rule will take effect typically within 30 seconds.
                      Note that a maximum of 100 rules are supported on a bucket.
                    items:
                      properties:
                        displayName:
                          description: A user-specified name for the retention rule.
                            Names can be helpful in identifying retention rules. The
                            name should be unique. This attribute is a forcenew attribute
                          type: string
                        duration:
                          description: (Updatable)
                          items:
                            properties:
                              timeAmount:
                                description: (Updatable) The timeAmount is interpreted
                                  in units defined by the timeUnit parameter, and
                                  is calculated in relation to each object's Last-Modified
                                  timestamp.
                                type: string
                              timeUnit:
                                description: (Updatable) The unit that should be used
                                  to interpret timeAmount.
                                type: string
                            type: object
                          type: array
                        timeRuleLocked:
                          description: (Updatable) The date and time as per RFC 3339
                            after which this rule is locked and can only be deleted
                            by deleting the bucket. Once a rule is locked, only increases
                            in the duration are allowed and no other properties can
                            be changed. This property cannot be updated for rules
                            that are in a locked state. Specifying it when a duration
                            is not specified is considered an error.
                          type: string
                      type: object
                    type: array
                  storageTier:
                    description: The type of storage tier of this bucket. A bucket
                      is set to 'Standard' tier by default, which means the bucket
                      will be put in the standard storage tier. When 'Archive' tier
                      type is set explicitly, the bucket is put in the Archive Storage
                      tier. The 'storageTier' property is immutable after bucket is
                      created.
                    type: string
                  versioning:
                    description: '(Updatable) Set the versioning status on the bucket.
                      By default, a bucket is created with versioning Disabled. Use
                      this option to enable versioning during bucket creation. Objects
                      in a version enabled bucket are protected from overwrites and
                      deletions. Previous versions of the same object will be available
                      in the bucket. Allowed Create values: Enabled, Disabled. Allowed
                      Update values: Enabled, Suspended.'
                    type: string
                required:
                - namespace
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessType:
                    description: (Updatable) The type of public access enabled on
                      this bucket. A bucket is set to NoPublicAccess by default, which
                      only allows an authenticated caller to access the bucket and
                      its contents. When ObjectRead is enabled on the bucket, public
                      access is allowed for the GetObject, HeadObject, and ListObjects
                      operations. When ObjectReadWithoutList is enabled on the bucket,
                      public access is allowed for the GetObject and HeadObject operations.
                    type: string
                  autoTiering:
                    description: (Updatable) Set the auto tiering status on the bucket.
                      By default, a bucket is created with auto tiering Disabled.
                      Use this option to enable auto tiering during bucket creation.
                      Objects in a bucket with auto tiering set to InfrequentAccess
                      are transitioned automatically between the 'Standard' and 'InfrequentAccess'
                      tiers based on the access pattern of the objects.
                    type: string
                  compartmentId:
                    description: (Updatable) The ID of the compartment in which to
                      create the bucket.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  kmsKeyId:
                    description: (Updatable) The OCID of a master encryption key used
                      to call the Key Management service to generate a data encryption
                      key or to encrypt or decrypt a data encryption key.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: (Updatable) Arbitrary string, up to 4KB, of keys
                      and values for user-defined metadata.
                    type: object
                    x-kubernetes-map-type: granular
                  objectEventsEnabled:
                    description: (Updatable) Whether or not events are emitted for
                      object state changes in this bucket. By default, objectEventsEnabled
                      is set to false. Set objectEventsEnabled to true to emit events
                      for object state changes. For more information about events,
                      see Overview of Events.
                    type: boolean
                  retentionRules:
                    description: (Updatable) Creates a new retention rule in the specified
                      bucket. The new rule will take effect typically within 30 seconds.
                      Note that a maximum of 100 rules are supported on a bucket.
                    items:
                      properties:
                        displayName:
                          description: A user-specified name for the retention rule.
                            Names can be helpful in identifying retention rules. The
                            name should be unique. This attribute is a forcenew attribute
                          type: string
                        duration:
                          description: (Updatable)
                          items:
                            properties:
                              timeAmount:
                                description: (Updatable) The timeAmount is interpreted
                                  in units defined by the timeUnit parameter, and
                                  is calculated in relation to each object's Last-Modified
                                  timestamp.
                                type: string
                              timeUnit:
                                description: (Updatable) The unit that should be used
                                  to interpret timeAmount.
                                type: string
                            type: object
                          type: array
                        timeRuleLocked:
                          description: (Updatable) The date and time as per RFC 3339
                            after which this rule is locked and can only be deleted
                            by deleting the bucket. Once a rule is locked, only increases
                            in the duration are allowed and no other properties can
                            be changed. This property cannot be updated for rules
                            that are in a locked state. Specifying it when a duration
                            is not specified is considered an error.
                          type: string
                      type: object
                    type: array
                  storageTier:
                    description: The type of storage tier of this bucket. A bucket
                      is set to 'Standard' tier by default, which means the bucket
                      will be put in the standard storage tier. When 'Archive' tier
                      type is set explicitly, the bucket is put in the Archive Storage
                      tier. The 'storageTier' property is immutable after bucket is
                      created.
                    type: string
                  versioning:
                    description: '(Updatable) Set the versioning status on the bucket.
                      By default, a bucket is created with versioning Disabled. Use
                      this option to enable versioning during bucket creation. Objects
                      in a version enabled bucket are protected from overwrites and
                      deletions. Previous versions of the same object will be available
                      in the bucket. Allowed Create values: Enabled, Disabled. Allowed
                      Update values: Enabled, Suspended.'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.compartmentId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.compartmentId)
                || (has(self.initProvider) && has(self.initProvider.compartmentId))'
          status:
            description: BucketStatus defines the observed state of Bucket.
            properties:
              atProvider:
                properties:
                  accessType:
                    description: (Updatable) The type of public access enabled on
                      this bucket. A bucket is set to NoPublicAccess by default, which
                      only allows an authenticated caller to access the bucket and
                      its contents. When ObjectRead is enabled on the bucket, public
                      access is allowed for the GetObject, HeadObject, and ListObjects
                      operations. When ObjectReadWithoutList is enabled on the bucket,
                      public access is allowed for the GetObject and HeadObject operations.
                    type: string
                  approximateCount:
                    description: The approximate number of objects in the bucket.
                      Count statistics are reported periodically. You will see a lag
                      between what is displayed and the actual object count.
                    type: string
                  approximateSize:
                    description: The approximate total size in bytes of all objects
                      in the bucket. Size statistics are reported periodically. You
                      will see a lag between what is displayed and the actual size
                      of the bucket.
                    type: string
                  autoTiering:
                    description: (Updatable) Set the auto tiering status on the bucket.
                      By default, a bucket is created with auto tiering Disabled.
                      Use this option to enable auto tiering during bucket creation.
                      Objects in a bucket with auto tiering set to InfrequentAccess
                      are transitioned automatically between the 'Standard' and 'InfrequentAccess'
                      tiers based on the access pattern of the objects.
                    type: string
                  bucketId:
                    description: The OCID of the bucket which is a Oracle assigned
                      unique identifier for this resource type (bucket). bucket_id
                      cannot be used for bucket lookup.
                    type: string
                  compartmentId:
                    description: (Updatable) The ID of the compartment in which to
                      create the bucket.
                    type: string
                  createdBy:
                    description: The OCID of the user who created the bucket.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  etag:
                    description: The entity tag (ETag) for the bucket.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    type: string
                  isReadOnly:
                    description: Whether or not this bucket is read only. By default,
                      isReadOnly is set to false. This will be set to 'true' when
                      this bucket is configured as a destination in a replication
                      policy.
                    type: boolean
                  kmsKeyId:
                    description: (Updatable) The OCID of a master encryption key used
                      to call the Key Management service to generate a data encryption
                      key or to encrypt or decrypt a data encryption key.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: (Updatable) Arbitrary string, up to 4KB, of keys
                      and values for user-defined metadata.
                    type: object
                    x-kubernetes-map-type: granular
                  namespace:
                    description: The Object Storage namespace used for the request.
                    type: string
                  objectEventsEnabled:
                    description: (Updatable) Whether or not events are emitted for
                      object state changes in this bucket. By default, objectEventsEnabled
                      is set to false. Set objectEventsEnabled to true to emit events
                      for object state changes. For more information about events,
                      see Overview of Events.
                    type: boolean
                  objectLifecyclePolicyEtag:
                    description: The entity tag (ETag) for the live object lifecycle
                      policy on the bucket.
                    type: string
                  replicationEnabled:
                    description: Whether or not this bucket is a replication source.
                      By default, replicationEnabled is set to false. This will be
                      set to 'true' when you create a replication policy for the bucket.
                    type: boolean
                  retentionRules:
                    description: (Updatable) Creates a new retention rule in the specified
                      bucket. The new rule will take effect typically within 30 seconds.
                      Note that a maximum of 100 rules are supported on a bucket.
                    items:
                      properties:
                        displayName:
                          description: A user-specified name for the retention rule.
                            Names can be helpful in identifying retention rules. The
                            name should be unique. This attribute is a forcenew attribute
                          type: string
                        duration:
                          description: (Updatable)
                          items:
                            properties:
                              timeAmount:
                                description: (Updatable) The timeAmount is interpreted
                                  in units defined by the timeUnit parameter, and
                                  is calculated in relation to each object's Last-Modified
                                  timestamp.
                                type: string
                              timeUnit:
                                description: (Updatable) The unit that should be used
                                  to interpret timeAmount.
                                type: string
                            type: object
                          type: array
                        retentionRuleId:
                          description: Unique identifier for the retention rule.
                          type: string
                        timeCreated:
                          description: The date and time that the retention rule was
                            created as per RFC3339.
                          type: string
                        timeModified:
                          description: The date and time that the retention rule was
                            modified as per RFC3339.
                          type: string
                        timeRuleLocked:
                          description: (Updatable) The date and time as per RFC 3339
                            after which this rule is locked and can only be deleted
                            by deleting the bucket. Once a rule is locked, only increases
                            in the duration are allowed and no other properties can
                            be changed. This property cannot be updated for rules
                            that are in a locked state. Specifying it when a duration
                            is not specified is considered an error.
                          type: string
                      type: object
                    type: array
                  storageTier:
                    description: The type of storage tier of this bucket. A bucket
                      is set to 'Standard' tier by default, which means the bucket
                      will be put in the standard storage tier. When 'Archive' tier
                      type is set explicitly, the bucket is put in the Archive Storage
                      tier. The 'storageTier' property is immutable after bucket is
                      created.
                    type: string
                  timeCreated:
                    description: The date and time that the retention rule was created
                      as per RFC3339.
                    type: string
                  versioning:
                    description: '(Updatable) Set the versioning status on the bucket.
                      By default, a bucket is created with versioning Disabled. Use
                      this option to enable versioning during bucket creation. Objects
                      in a version enabled bucket are protected from overwrites and
                      deletions. Previous versions of the same object will be available
                      in the bucket. Allowed Create values: Enabled, Disabled. Allowed
                      Update values: Enabled, Suspended.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
